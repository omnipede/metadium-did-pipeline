plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'jacoco'
}

group 'io.omnipede'
version '0.1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.data', name: 'spring-data-elasticsearch', version: '4.2.0'
    implementation group: 'org.web3j', name: 'core', version: '4.8.4'

    // Web3j 에서 사용하는 okhttp 와 spring 에서 사용하는 okhttp 간에 버전 충돌이 발생하여 직접 okhttp 의존성을 선언함.
    // 실제 어플리케이션 코드 내에서 참조하고 있지는 않음
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Junit 5
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

    // Test mocking framework
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.9.5'

    // Test containers
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.15.3'
    testImplementation group: 'org.testcontainers', name: 'elasticsearch', version: '1.15.3'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.15.3'
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        html.enabled true
        csv.enabled true
        xml.enabled true
    }

    afterEvaluate {
        getClassDirectories().setFrom(
            files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                    // Exclude smart contract wrapper class
                    '**io/omnipede/data/didpipeline/service/blockchain/IdentityRegistry**'
                ])
            })
        )
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.10
            }
        }
    }

    afterEvaluate {
        getClassDirectories().setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            // Exclude smart contract wrapper class
                            '**io/omnipede/data/didpipeline/service/blockchain/IdentityRegistry**'
                    ])
                })
        )
    }
}
